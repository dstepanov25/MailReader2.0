// <auto-generated />
using Email.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Email.EntityFramework.Migrations
{
    [DbContext(typeof(EmailContext))]
    partial class EmailContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Email.EntityFramework.Models.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("LastUpdate");

                    b.Property<string>("Login");

                    b.Property<int>("MaxDaysForUpdate");

                    b.Property<string>("Password");

                    b.Property<string>("PriceListExtension");

                    b.Property<string>("PriceListFileName");

                    b.Property<string>("PriceListName");

                    b.Property<string>("PriceListUrl");

                    b.Property<int>("SupplierId");

                    b.Property<bool>("UpdateFromMail");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("PriceList");
                });

            modelBuilder.Entity("Email.EntityFramework.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Contacts");

                    b.Property<string>("Country");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Emails");

                    b.Property<string>("FolderName");

                    b.Property<bool>("IsNew");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Email.EntityFramework.Models.PriceList", b =>
                {
                    b.HasOne("Email.EntityFramework.Models.Supplier", "Supplier")
                        .WithMany("PriceLists")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
